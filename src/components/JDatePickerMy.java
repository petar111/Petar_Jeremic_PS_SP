/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package components;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author siux
 */
public class JDatePickerMy extends javax.swing.JPanel {

    /**
     * Creates new form JDatePickerMy
     */
    public JDatePickerMy() {
        initComponents();
        prepareView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatePicker = new javax.swing.JTable();
        cboxMonth = new javax.swing.JComboBox<>();
        cboxYear = new javax.swing.JComboBox<>();
        txtResult = new javax.swing.JTextField();

        tblDatePicker.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "2", "3", "4", "5", "6", "7"},
                {"8", "9", "10", "11", "12", "13", "14"},
                {"15", "16", "17", "18", "19", "20", "21"}
            },
            new String [] {
                "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDatePicker.setDragEnabled(true);
        tblDatePicker.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDatePickerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDatePicker);
        if (tblDatePicker.getColumnModel().getColumnCount() > 0) {
            tblDatePicker.getColumnModel().getColumn(0).setResizable(false);
            tblDatePicker.getColumnModel().getColumn(1).setResizable(false);
            tblDatePicker.getColumnModel().getColumn(2).setResizable(false);
            tblDatePicker.getColumnModel().getColumn(3).setResizable(false);
            tblDatePicker.getColumnModel().getColumn(4).setResizable(false);
            tblDatePicker.getColumnModel().getColumn(5).setResizable(false);
            tblDatePicker.getColumnModel().getColumn(6).setResizable(false);
        }

        cboxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboxMonth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxMonthItemStateChanged(evt);
            }
        });

        cboxYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboxYear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxYearItemStateChanged(evt);
            }
        });

        txtResult.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(cboxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(cboxYear, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblDatePickerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDatePickerMouseClicked
        DefaultTableModel model = (DefaultTableModel)tblDatePicker.getModel();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        
        
        
        int day = Integer.parseInt((String)model.getValueAt(tblDatePicker.getSelectedRow(), tblDatePicker.getSelectedColumn()));
        
        try {
            Date date = sdf.parse(day + "." + cboxMonth.getSelectedItem() + "." + cboxYear.getSelectedItem());
            txtResult.setText(sdf.format(date));
        } catch (ParseException ex) {
            Logger.getLogger(JDatePickerMy.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
        
        
    }//GEN-LAST:event_tblDatePickerMouseClicked

    private void cboxMonthItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxMonthItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxMonthItemStateChanged

    private void cboxYearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxYearItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxYearItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboxMonth;
    private javax.swing.JComboBox<String> cboxYear;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDatePicker;
    private javax.swing.JTextField txtResult;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {
        cboxMonth.removeAllItems();
        cboxYear.removeAllItems();
        
        
        
        for (int i = 1; i <= 12; i++) {
            cboxMonth.addItem(i + "");
        }
        
        for (int i = 1970; i < Integer.parseInt(new SimpleDateFormat("yyyy").format(new Date())); i++) {
            cboxYear.addItem(i + "");
        }
        
        //tblDatePicker.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblDatePicker.setCellSelectionEnabled(true);
        DefaultTableModel model = (DefaultTableModel)tblDatePicker.getModel();

       //model.setValueAt("dsadasd", 1, 1);
        
    }

    public JTextField getTxtResult() {
        return txtResult;
    }
    
    
}
